{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Before-you-begin","level":2,"type":"heading","text":"Before you begin"},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This document is deprecated in favor of the step-by-step tutorial - "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/tutorials\/Tutorial-Table-of-Contents"},{"type":"text","text":" - and may not contain the up to date information."}]}],"type":"aside","name":"Warning"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Before you begin, you may ask which version of the SDK you should integrate. This documentation was compiled for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/Version"},{"type":"text","text":" and this is the version that you should use."}]},{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The integration can be split into 4 steps:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"choose an integration strategy ("},{"type":"reference","isActive":true,"identifier":"#Cocoapods"},{"type":"text","text":" or "},{"type":"reference","isActive":true,"identifier":"#Manual"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"add permissions and entitlements to your app"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"implement the integrating code"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"app store submission adjustments"}]}]}]},{"anchor":"Integration-strategy","level":3,"type":"heading","text":"Integration strategy"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can integrate the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib"},{"type":"text","text":" with cocoapods, carthage or manually. Regardless of the strategy, the framework lives on the Ti&m artifactory instance to which access needs to be provided. If you don’t have access, please contact us and we will set this up for you."}]},{"anchor":"Cocoapods","level":4,"type":"heading","text":"Cocoapods"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We recommend to use cocoapods as the simplest and fastest way of integrating "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib"},{"type":"text","text":" into your code. For this type of integration to work, you need the "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/jfrog\/cocoapods-art"},{"type":"text","text":". You can get it with:"}]},{"type":"codeListing","syntax":null,"code":["gem install cocoapods-art"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"repo-art uses authentication as specified in your standard "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.gnu.org\/software\/inetutils\/manual\/html_node\/The-_002enetrc-file.html"},{"type":"text","text":" file."}]},{"type":"codeListing","syntax":null,"code":["machine bin.ti8m.ch","login <LOGIN>","password <PASSWORD>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"LOGIN"},{"type":"text","text":" and "},{"type":"codeVoice","code":"PASSWORD"},{"type":"text","text":" are provided by Ti&m, if you don’t have them, please contact us. The next step is to add the artifactory specs repositories:"}]},{"type":"codeListing","syntax":null,"code":["pod repo-art add ti8m-mobile-pods \"https:\/\/bin.ti8m.ch\/artifactory\/api\/pods\/ti8m-mobile-pods\"","pod repo-art add github-cocoapods \"https:\/\/bin.ti8m.ch\/artifactory\/api\/pods\/github-cocoapods\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unlike the standard "},{"type":"codeVoice","code":"pod repo add"},{"type":"text","text":" command, the "},{"type":"codeVoice","code":"repo-art"},{"type":"text","text":" requires a specific update command to make sure the artifacts are fetched:"}]},{"type":"codeListing","syntax":null,"code":["pod repo-art update ti8m-mobile-pods","pod repo-art update github-cocoapods"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"With all the above done, let’s have a look at a sample Podfile:"}]},{"type":"codeListing","syntax":"ruby","code":["# Uncomment the next line to define a global platform for your project","platform :ios, '13.0'","","target 'SampleApp' do","  # Comment the next line if you don't want to use dynamic frameworks","  use_frameworks!","  ","  plugin 'cocoapods-art', :sources => [","  'ti8m-mobile-pods',","  'github-cocoapods'","  ]","  ","  # Pods for SampleApp","  pod 'IDCheckUILib', '~> 1.9'","  pod 'IDCheckUITheme\/Default', '~> 1.1' \/\/ Optional - only needed if you want to use the default theme","end","","post_install do |installer|","  installer.pods_project.targets.each do |target|","    # Script below fix issue with lottie-ios accordingly to:","    # https:\/\/github.com\/airbnb\/lottie-ios\/issues\/1321","    target.build_configurations.each do |config|","      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'","    end","    # Fix for Xcode 14 https:\/\/github.com\/CocoaPods\/CocoaPods\/issues\/8891#issuecomment-1249151085","    if target.respond_to?(:product_type) and target.product_type == \"com.apple.product-type.bundle\"","      target.build_configurations.each do |config|","          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'","      end","    end","  end","end"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The important part is the plugin section where everything is setup so that the plugin can access the Ti&m pod repositories."}]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"At the bottom of the file are two fixes necessary for Xcode14+ code signing changes and for the linking of the binary frameworks, without those your application will crash, so make sure not to omit them."}]}],"type":"aside","name":"Important"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Please adapt your "},{"type":"codeVoice","code":"Podfile"},{"type":"text","text":" with the above changes and after that, run:"}]},{"type":"codeListing","syntax":null,"code":["pod install"]},{"anchor":"Manual","level":4,"type":"heading","text":"Manual"},{"type":"paragraph","inlineContent":[{"type":"text","text":"TBD"}]},{"anchor":"Permissions-and-entitlements","level":3,"type":"heading","text":"Permissions and entitlements"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To successfuly integrate the SDK, the integrating iOS application will need the following permissions:"}]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The keys in the below table come from the Info.plist file being presented as source code"}]}],"type":"aside","name":"Important"},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Key in the Info.plist"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Required"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Required by"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"NSCameraUsageDescription"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"required"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"document verification module and selfie verification module"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"NFCReaderUsageDescription"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"optional"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"eMRTD (Electronic Machine Readable Travel Documents) verification module"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"com.apple.developer.nfc.readersession.iso7816.select-identifiers"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"optional"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"eMRTD verification module"}]}]]],"header":"row"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is how the above values may look in your "},{"type":"emphasis","inlineContent":[{"type":"text","text":".plist"}]},{"type":"text","text":" file:"}]},{"type":"codeListing","syntax":"xml","code":["<key>NFCReaderUsageDescription<\/key>","<string>NFC usage to scan ID chip<\/string>","<key>NSCameraUsageDescription<\/key>","<string>Camera usage to scan ID<\/string>","<key>com.apple.developer.nfc.readersession.iso7816.select-identifiers<\/key>","<array>","    <string>A0000002471001<\/string>","    <string>A0000002472001<\/string>","    <string>00000000000000<\/string>","<\/array>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"IDCheckUILib uses CoreNFC so it needs some specific entries in the entitlements file of your integrating application. To achieve that in Xcode 13+, do the following:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Click on your project, then select your integrating target from the list"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select the Signing & Capabilities tab"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Click the + button in the top left (left of the All, Debug, Release tabs)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Search for the Near Field Communication Tag Reading and select it"},{"type":"text","text":" "},{"type":"text","text":"At this point the .entitlemets file with the name of your application should be added to your project."}]}]}]},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In Xcode prior to version 14.2 (14C18) there is a known problem with the automatically created entitlements file, which may prevent you from uploading your application to App Store Connect. The problem is described "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/forums\/thread\/123483"},{"type":"text","text":". There is a "},{"type":"reference","isActive":true,"identifier":"https:\/\/stackoverflow.com\/a\/61265904"},{"type":"text","text":" that we use in our sample app, which is basically to delete the NFC Data Exchange Format field in the .entitlements file."}]}],"type":"aside","name":"Warning"},{"anchor":"Implementation","level":3,"type":"heading","text":"Implementation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The main point of interest is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUI"},{"type":"text","text":" struct. Let’s have a look how we can configure it, how it communicates with the integrating code and what functionality it exposes."}]},{"anchor":"Configuration","level":4,"type":"heading","text":"Configuration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s have a look how the configuration is defined and how to instantiate the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUI"},{"type":"text","text":", for this let’s have a look at the initializer "},{"type":"codeVoice","code":"IDCheckUI\/init(config:processID:preferences:endStateActionSuccess:endStateActionPending:endStateActionFailed:endStateActionError:)"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["\/\/\/ Use this initializer to set up an instance of IDCheckUI","\/\/\/ - Parameters:","\/\/\/   - config: IDCheckConfig to use","\/\/\/   - processID: processID as string, this is something you will get from ti&m or leave it empty for the SDK to figure it out on it's own","\/\/\/   - preferences: preferences to use","\/\/\/   - endStateActionSuccess: this callback is invoked when the process succeeds","\/\/\/   - endStateActionPending: this callback is invoked when the process is processing","\/\/\/   - endStateActionFailed: this callback is invoked when the process failed","\/\/\/   - endStateActionError: this callback is invoked when the process encounters an error","public init(","    config: IDCheckConfig,","    processID: String? = nil,","    preferences: IDCheckUIPreferences,","    endStateActionSuccess: (() -> Void)? = nil,","    endStateActionPending: (() -> Void)? = nil,","    endStateActionFailed: (() -> Void)? = nil,","    endStateActionError: (() -> Void)? = nil",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As you can see, we will need the "},{"type":"codeVoice","code":"config"},{"type":"text","text":" and the "},{"type":"codeVoice","code":"preferences"},{"type":"text","text":" and optionally "},{"type":"codeVoice","code":"processID"},{"type":"text","text":" (this will be provided to you by ti&m, if not please leave it out), and a set of callbacks (will be described in the "},{"type":"reference","isActive":true,"identifier":"#Communicating-with-the-SDK"},{"type":"text","text":"). Let’s start with the "},{"type":"codeVoice","code":"config"},{"type":"text","text":" - this is something that configures the SDK on the lowest level, setting the "},{"type":"codeVoice","code":"URLs"},{"type":"text","text":" for communication and some optional features like certificates for pinning (if needed) or custom headers (also optional):"}]},{"type":"codeListing","syntax":"swift","code":["\/\/\/ Creates an instance configured with all required parameters","\/\/\/ - Parameters:","\/\/\/   - apiURL: URL of the API, together with the version e.g. `https:\/\/id-check-int.ti8m.ch\/delegate\/id-check-process-adapter\/v5`","\/\/\/   - socketScanURL: URL of the document scan socket, together with the version and socket release e.g. `wss:\/\/id-check-int.ti8m.ch\/delegate\/id-check-scan\/v2\/documents\/scan\/socket\/?rel=albis`","\/\/\/   - socketEMRTDURL: URL of the NFC scan socket, together with the version and socket release e.g. `wss:\/\/id-check-int.ti8m.ch\/delegate\/id-check-emrtd\/v1\/documents\/emrtd\/socket\/?rel=albis`","\/\/\/   - socketLivenessURL: (Added in version 6.0) URL of the liveness scan socket e.g.","\/\/\/   `wss:\/\/id-check-int.ti8m.ch\/delegate\/id-check-composite\/v5\/socket\/tasks\/`","\/\/\/   - loggingURL: your logging URL, can be skipped with an empty string","\/\/\/   - tenantID: your tennant ID as String","\/\/\/   - pollingInterval: a desired polling interval in milliseconds as Int","\/\/\/   - certificates: an array of certificates for connecting to the API (pinning), if needed (these are the names of .cer files included in the integrating application bundle, without extension)","\/\/\/   - customHeaders: a dictionary of additional headers used for connecting to the API, if needed","public init(","    apiURL: String,","    socketScanURL: String,","    socketEMRTDURL: String,","    socketLivenessURL: String,","    loggingURL: String,","    tenantID: String,","    pollingInterval: Int = 5000,","    certificates: [String] = [],","    customHeaders: [String : String] = [:]",")"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All information needed to instantiate the configuration struct, except polling interval which you can define to your liking (please use the interval greater than 5 seconds), will be delivered to you by ti&m."}]}],"type":"aside","name":"Note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The next thing we need is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUIPreferences"},{"type":"text","text":". The only required value here is the scan mode ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUIPreferredScanMode"},{"type":"text","text":") that you want to use, for the rest it’s possible to just use the default values:"}]},{"type":"codeListing","syntax":"swift","code":["public init(","    address: IDCheckAddress? = nil,","    preferredScanMode: IDCheckUIPreferredScanMode,","    documentVerificationPreferences: IDCheckUIDocumentVerificationPreferences = IDCheckUIDocumentVerificationPreferences(),","    emrtdVerificationPreferences: IDCheckUIEMRTDVerificationPreferences = IDCheckUIEMRTDVerificationPreferences(),","    selfieVerificationPreferences: IDCheckUISelfieVerificationPreferences = IDCheckUISelfieVerificationPreferences(),","    allowTaskSkipping: Bool = true,","    useIntro: Bool = true",")"]},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Study the documentation of each property of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUIPreferences"},{"type":"text","text":" to learn what is possible and how to customise your preferences."}]}],"type":"aside","name":"Tip"},{"anchor":"Communicating-with-the-SDK","level":4,"type":"heading","text":"Communicating with the SDK"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"IDCheckUI"},{"type":"text","text":" communicates with the integrating code using two methods: "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUIDelegate"},{"type":"text","text":" protocol and a set of callbacks that can be defined after initialization. Depending how much control you need, you can only implement the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUIDelegate"},{"type":"text","text":" or the callbacks, or the combination of both."}]},{"type":"codeListing","syntax":"swift","code":["\/\/\/ This delegate protocol is the main way of communication between the IDCheckUI and the integrating code","@objc public protocol IDCheckUIDelegate: AnyObject {","    \/\/\/ This method is invoked when the SDK is processing. The integrating code gets a chance to improve the UI experiece by presenting a loading indicator to the user.","    func showLoadingIndicator()","    \/\/\/ This method is invoked when the SDK finishes processing, if a loading indicator was presented by the integrating code, now is the time to dismiss it.","    func hideLoadingIndicator()","    \/\/\/ This method is invoked when the SDK presents a view controller. During the process the SDK will show different view controllers for different functionality, for example document scan, NFC read or liveness. This delegate method let's the integrating code react when this happens.","    func presentViewController(_ viewController: IDCheckUIViewController)","    \/\/\/ This method is invoked when the SDK dismisses a view controller, and gives the integrating code a chance to react when this happens.","    func dismissPresentedViewController()","    \/\/\/ This method is invoked when the SDK completes the process. The process can finish successfully or fail, this is communicated by the result parameter.","    func didCompleteProcess(result: Bool)","    \/\/\/ This method is invoked when the SDK is processing, giving the integrating code a chance to present a waiting screen if needed.","    func presentWaitingViewController()","}"]},{"type":"codeListing","syntax":"swift","code":["public class IDCheckUI: NSObject {","    \/\/\/ A delegate is the main way the IDCheckUI communicates with the integrating code","    public weak var delegate: IDCheckUIDelegate?","    \/\/\/ Callback for when the process succeeded, this callback is executed before the `IDCheckUIDelegate` method","    public let endStateActionSuccess: (() -> Void)?","    \/\/\/ Callback for when the SDK is processing e.g. documents or selfie is being verified etc. This callback is executed before the `IDCheckUIDelegate` method ","    public let endStateActionPending: (() -> Void)?","    \/\/\/ Callback for when the process has failed","    public let endStateActionFailed: (() -> Void)?","    \/\/\/ Callback for when the SDK encountered an error, you may want to show a generic error message here","    public let endStateActionError: (() -> Void)?"]},{"anchor":"Other-requirements","level":4,"type":"heading","text":"Other requirements"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are some additional steps that need to be taken before a minimal example can be presented. First, a theme needs to be selected. IDCheckUILib uses theming defined in IDCheckUITheme pod\/package, which provides a default theme. It can be used in the following way:"}]},{"type":"codeListing","syntax":"swift","code":["import IDCheckUITheme","...","IDCheckUI.theme = IDCheckUITheme.default"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"More details on theming is provided in one of the following chapters."}]},{"anchor":"Optional-steps","level":4,"type":"heading","text":"Optional steps"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To be able to receive the logs from inside the SDK, you may want to provide a logger object. To do this, you assing a static property on the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"IDCheckLogger"}]},{"type":"text","text":" object, like this:"}]},{"type":"codeListing","syntax":"swift","code":["IDCheckLogger.shared = IDCheckLogger.default"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"emphasis","inlineContent":[{"type":"text","text":"IDCheckLogger.default"}]},{"type":"text","text":" will simply print the SDK logs to the console. You can replace the default implementation with your own that does specific things that you require."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Without this step you will not see any logs from the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib"},{"type":"text","text":" SDK."}]}],"type":"aside","name":"Note"},{"anchor":"Final-step","level":4,"type":"heading","text":"Final step"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, the entry point to the SDK is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUI\/start(showIntro:)"},{"type":"text","text":". Make sure the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUI\/delegate"},{"type":"text","text":" is set before you call this method, as the SDK will subsequently invoke its delegate methods to communicate the need of presenting its view controllers."}]},{"type":"codeListing","syntax":"swift","code":["idCheckUI.start()"]},{"anchor":"Simplest-example-UIKit","level":4,"type":"heading","text":"Simplest example - UIKit"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The simples example consists of instantiating "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUI"},{"type":"text","text":" and showing it to the user. The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUI"},{"type":"text","text":" is written in "},{"type":"strong","inlineContent":[{"type":"text","text":"UIKit"}]},{"type":"text","text":" and so you manage the view hierarchy with subclasses of "},{"type":"codeVoice","code":"UIViewController"},{"type":"text","text":". The SDK informs you that a view controller needs to be shown with its "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUIDelegate\/presentViewController(_:)"},{"type":"text","text":" method."}]},{"type":"codeListing","syntax":"swift","code":["import IDCheckLib","import IDCheckUILib","import IDCheckUITheme","import UIKit","","class ViewController: UIViewController {","    ","    private var idCheckUI: IDCheckUI!","","    override func viewDidLoad() {","        super.viewDidLoad()","        \/\/ Do any additional setup after loading the view.","        ","        let config = IDCheckConfig(","            apiURL: \"https:\/\/id-check-int.ti8m.ch\/delegate\/id-check-process-adapter\/v5\",","            socketScanURL: \"wss:\/\/id-check-int.ti8m.ch\/delegate\/id-check-scan\/v2\/documents\/scan\/socket\/?rel=albis\",","            socketEMRTDURL: \"wss:\/\/id-check-int.ti8m.ch\/delegate\/id-check-emrtd\/v1\/documents\/emrtd\/socket\/?rel=albis\",","            socketLivenessURL: \"wss:\/\/id-check-dev.ti8m.ch\/delegate\/id-check-composite\/v5\/socket\/tasks\/\",","            loggingURL: \"https:\/\/id-check-int.ti8m.ch\/delegate\/logging-service\/v1\",","            tenantID: \"949\",","            pollingInterval: 5000","        )","        idCheckUI = IDCheckUI(","            config: config,","            preferences: IDCheckUIPreferences(preferredScanMode: .ask)","        )","        idCheckUI.delegate = self","        IDCheckUI.theme = IDCheckUITheme.default","        IDCheckLogger.shared = IDCheckLogger.default","    }","    ","    override func viewDidAppear(_ animated: Bool) {","        super.viewDidAppear(animated)","        idCheckUI.start()","    }","}","","extension ViewController: IDCheckUIDelegate {","    func showLoadingIndicator() {","        \/\/ Here you can present a loading indicator to the user","    }","    ","    func hideLoadingIndicator() {","        \/\/ Here you can hide the loading indicator","    }","    ","    func presentViewController(_ viewController: IDCheckUILib.IDCheckUIViewController) {","        \/\/ The IDCheckUI will inform you that it needs to show this view controller","        navigationController?.pushViewController(viewController, animated: true)","    }","    ","    func dismissPresentedViewController() {","        \/\/ The IDCheckUI will inform you that the presented view controller should be dismissed","    }","    ","    func didCompleteProcess(result: Bool) {","        \/\/ The IDCheckUI will inform you of the process completion and the result - true if successful, false if failed","    }","    ","    func presentWaitingViewController() {","        \/\/ Here the IDCheckUI will inform you that the processing is taking place and you may want to present an intermediate waiting view","    }","}"]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUI"},{"type":"text","text":" uses "},{"type":"emphasis","inlineContent":[{"type":"text","text":"presentingViewController"}]},{"type":"text","text":" internally to presenet some modal phases during it’s flows, therefore it’s important that you don’t present the main "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUI"},{"type":"text","text":" controller modally and instead push it on the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"UINavigationController"}]},{"type":"text","text":" stack."}]}],"type":"aside","name":"Important"},{"anchor":"Simplest-example-SwiftUI","level":4,"type":"heading","text":"Simplest example - SwiftUI"},{"type":"paragraph","inlineContent":[{"type":"text","text":"TBD"}]},{"anchor":"Theming","level":4,"type":"heading","text":"Theming"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this section you will learn how to customise the UI of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib"},{"type":"text","text":". You already know that a theme needs to be specified for the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUI"},{"type":"text","text":" to work properly, and that the default theme is provided:"}]},{"type":"codeListing","syntax":"swift","code":["IDCheckUI.theme = IDCheckUITheme.default"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The above line points the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUI"},{"type":"text","text":" to the bundle where all the resources needed for theming are located. This can be any bundle, for example the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"default"}]},{"type":"text","text":" theme comes from a separate pod\/package "},{"type":"emphasis","inlineContent":[{"type":"text","text":"IDCheckUITheme"}]},{"type":"text","text":". The quickest way to create a new theme for your application is to take the default theme structure, copy it into your project and just point the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUI\/theme"},{"type":"text","text":" into your application bundle, like this:"}]},{"type":"codeListing","syntax":"swift","code":["IDCheckUI.theme = .main"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default theme structure is provided by Ti&m and can be fetched from "},{"type":"reference","isActive":true,"identifier":"https:\/\/bin.ti8m.ch:443\/artifactory\/ti8m-mobile-pods\/ThemeStructure\/ThemeStructure.zip"},{"type":"text","text":". If you don’t have access to our Artifactory instance, please contact us (see "},{"type":"reference","isActive":true,"identifier":"#Integration-strategy"},{"type":"text","text":"). After downloading the file, unzip it and add the contents into your project. It should look similar to this:"},{"type":"text","text":" "},{"type":"image","identifier":"theme_structure"},{"type":"text","text":" "},{"type":"text","text":"By inspecting all of the assets, you can check which parts of the SDK can be currently customised."}]},{"anchor":"Animations","level":5,"type":"heading","text":"Animations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"TBD"}]},{"anchor":"Colors-and-Images","level":5,"type":"heading","text":"Colors and Images"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Customising colors and images should be as easy as going to the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Colors"}]},{"type":"text","text":" or "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Images"}]},{"type":"text","text":" asset catalogue and changing the color or image to the custom version that you want. For example, to change the background color used in the SDK, just select the color and change the value on the bottom right:"},{"type":"text","text":" "},{"type":"image","identifier":"customise_colors"}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The default theme, and thus the theme structure that you are editing, currently does not support the dark mode, but you can add that support for your theme by changing the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Appearances"}]},{"type":"text","text":" setting on the right of the screen."},{"type":"text","text":" "},{"type":"text","text":"Customising images is very similar to colors, just provide your custom images in the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Images"}]},{"type":"text","text":" asset catalog and they will be used for your theme."}]}],"type":"aside","name":"Note"},{"anchor":"Fonts","level":5,"type":"heading","text":"Fonts"},{"type":"paragraph","inlineContent":[{"type":"text","text":"TBD"}]},{"anchor":"Localizations","level":5,"type":"heading","text":"Localizations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To customise localizations, just open one of the provided "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Localizable"}]},{"type":"text","text":" files and update the translations with your custom text."},{"type":"text","text":" "},{"type":"text","text":"To extend support to more languages, just add a new language in your project info tab, like you normally would, just make sure the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Localizable"}]},{"type":"text","text":" file is selected when Xcode asks you which files to localize."}]},{"anchor":"Styles","level":5,"type":"heading","text":"Styles"},{"type":"paragraph","inlineContent":[{"type":"text","text":"TBD"}]},{"anchor":"App-Store-submission-adjustments","level":3,"type":"heading","text":"App Store submission adjustments"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To publish your app in the App Store, make sure you provide the correct app privacy details as described in the "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/app-store\/review\/guidelines\/#privacy"},{"type":"text","text":". You can provide the details in App Store Connect by selecting “App Privacy” in the sidebar of your app. All data collected is used exclusively for the functionality of the app and is linked to the identity of the user, but no data is used for tracking purposes. The SDK itself collects the following data:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Contact Info: Name, Email Address, Phone Number, Physical Address"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Location: Precise Location"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Sensitive Info"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"User Content: Photos and Videos"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Identifiers: User ID"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Diagnostics: Crash Data"}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/idcheckuilib\/integration-guide"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/idcheckuilib\/integration-guide"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/Integration-Guide","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Step-by-step guide on how to integrate the IDCheckUILib into your app."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Integration Guide","role":"article","modules":[{"name":"IDCheckUILib"}]},"hierarchy":{"paths":[["doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib"]]},"references":{"#Integration-strategy":{"title":"Integration strategy","titleInlineContent":[{"type":"text","text":"Integration strategy"}],"type":"link","identifier":"#Integration-strategy","url":"#Integration-strategy"},"https://www.gnu.org/software/inetutils/manual/html_node/The-_002enetrc-file.html":{"title":"netrc","titleInlineContent":[{"type":"text","text":"netrc"}],"type":"link","identifier":"https:\/\/www.gnu.org\/software\/inetutils\/manual\/html_node\/The-_002enetrc-file.html","url":"https:\/\/www.gnu.org\/software\/inetutils\/manual\/html_node\/The-_002enetrc-file.html"},"#Manual":{"title":"manual","titleInlineContent":[{"type":"text","text":"manual"}],"type":"link","identifier":"#Manual","url":"#Manual"},"doc://ch.ti8m.idcheck.ui.library/documentation/IDCheckUILib/IDCheckUI/delegate":{"role":"symbol","title":"delegate","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"delegate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IDCheckUIDelegate","preciseIdentifier":"c:@M@IDCheckUILib@objc(pl)IDCheckUIDelegate"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"A delegate is the main way the IDCheckUI communicates with the integrating code"}],"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUI\/delegate","kind":"symbol","type":"topic","url":"\/documentation\/idcheckuilib\/idcheckui\/delegate"},"doc://ch.ti8m.idcheck.ui.library/documentation/IDCheckUILib/IDCheckUIPreferredScanMode":{"role":"symbol","title":"IDCheckUIPreferredScanMode","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"IDCheckUIPreferredScanMode"}],"abstract":[{"type":"text","text":"Defines which scan mode will be used when scanning the document. The .full mode scans the document, together with hologram etc. The .preNFC mode additionally reads the NFC chip of the document. The .ask mode will display a view to the user asking them if their document has the chip, and continue with the best scanning mode depending on the user choice."}],"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUIPreferredScanMode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IDCheckUIPreferredScanMode"}],"url":"\/documentation\/idcheckuilib\/idcheckuipreferredscanmode"},"doc://ch.ti8m.idcheck.ui.library/documentation/IDCheckUILib/IDCheckUIPreferences":{"role":"symbol","title":"IDCheckUIPreferences","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IDCheckUIPreferences"}],"abstract":[{"type":"text","text":"IDCheckUIPreferences"}],"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUIPreferences","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IDCheckUIPreferences"}],"url":"\/documentation\/idcheckuilib\/idcheckuipreferences"},"theme_structure":{"alt":"Theme structure","type":"image","identifier":"theme_structure","variants":[{"url":"\/images\/theme_structure.png","traits":["1x","light"]}]},"doc://ch.ti8m.idcheck.ui.library/documentation/IDCheckUILib/IDCheckUIDelegate":{"role":"symbol","title":"IDCheckUIDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IDCheckUIDelegate"}],"abstract":[{"type":"text","text":"This delegate protocol is the main way of communication between the IDCheckUI and the integrating code"}],"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUIDelegate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IDCheckUIDelegate"}],"url":"\/documentation\/idcheckuilib\/idcheckuidelegate"},"doc://ch.ti8m.idcheck.ui.library/documentation/IDCheckUILib/IDCheckUI/start(showIntro:)":{"role":"symbol","title":"start(showIntro:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"showIntro"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUI\/start(showIntro:)","kind":"symbol","type":"topic","url":"\/documentation\/idcheckuilib\/idcheckui\/start(showintro:)"},"doc://ch.ti8m.idcheck.ui.library/documentation/IDCheckUILib/Version":{"role":"article","title":"2.4.0","abstract":[],"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/Version","kind":"article","type":"topic","url":"\/documentation\/idcheckuilib\/version"},"doc://ch.ti8m.idcheck.ui.library/documentation/IDCheckUILib/IDCheckUIDelegate/presentViewController(_:)":{"navigatorTitle":[{"kind":"identifier","text":"presentViewController:"}],"role":"symbol","title":"presentViewController(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"presentViewController"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"IDCheckUIViewController","preciseIdentifier":"c:@M@IDCheckUILib@objc(cs)IDCheckUIViewController"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"This method is invoked when the SDK presents a view controller. During the process the SDK will show different view controllers for different functionality, for example document scan, NFC read or liveness. This delegate method let’s the integrating code react when this happens."}],"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUIDelegate\/presentViewController(_:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/idcheckuilib\/idcheckuidelegate\/presentviewcontroller(_:)"},"#Cocoapods":{"title":"Cocoapods","titleInlineContent":[{"type":"text","text":"Cocoapods"}],"type":"link","identifier":"#Cocoapods","url":"#Cocoapods"},"https://bin.ti8m.ch:443/artifactory/ti8m-mobile-pods/ThemeStructure/ThemeStructure.zip":{"title":"this Artifactory location","titleInlineContent":[{"type":"text","text":"this Artifactory location"}],"type":"link","identifier":"https:\/\/bin.ti8m.ch:443\/artifactory\/ti8m-mobile-pods\/ThemeStructure\/ThemeStructure.zip","url":"https:\/\/bin.ti8m.ch:443\/artifactory\/ti8m-mobile-pods\/ThemeStructure\/ThemeStructure.zip"},"doc://ch.ti8m.idcheck.ui.library/documentation/IDCheckUILib/IDCheckUI/theme":{"role":"symbol","title":"theme","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"theme"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IDCheckStyle","preciseIdentifier":"s:14IDCheckUITheme0A5StyleP"}],"abstract":[{"type":"text","text":"This defines which theme is used by IDCheckUILib."}],"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUI\/theme","kind":"symbol","type":"topic","url":"\/documentation\/idcheckuilib\/idcheckui\/theme"},"https://stackoverflow.com/a/61265904":{"title":"workaround","titleInlineContent":[{"type":"text","text":"workaround"}],"type":"link","identifier":"https:\/\/stackoverflow.com\/a\/61265904","url":"https:\/\/stackoverflow.com\/a\/61265904"},"doc://ch.ti8m.idcheck.ui.library/documentation/IDCheckUILib/IDCheckUI":{"role":"symbol","title":"IDCheckUI","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IDCheckUI"}],"abstract":[],"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib\/IDCheckUI","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IDCheckUI"}],"url":"\/documentation\/idcheckuilib\/idcheckui"},"doc://ch.ti8m.idcheck.ui.library/tutorials/Tutorial-Table-of-Contents":{"role":"overview","title":"Introducing IDCheckUILib","abstract":[{"type":"text","text":"IDCheckUILib is an UI layer on top of the IDCheckLib that simplifies it’s integration into your project."}],"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/tutorials\/Tutorial-Table-of-Contents","kind":"overview","type":"topic","url":"\/tutorials\/tutorial-table-of-contents"},"#Communicating-with-the-SDK":{"title":"Communicating with the SDK chapter","titleInlineContent":[{"type":"text","text":"Communicating with the SDK chapter"}],"type":"link","identifier":"#Communicating-with-the-SDK","url":"#Communicating-with-the-SDK"},"https://github.com/jfrog/cocoapods-art":{"title":"cocoapods-art plugin","titleInlineContent":[{"type":"text","text":"cocoapods-art plugin"}],"type":"link","identifier":"https:\/\/github.com\/jfrog\/cocoapods-art","url":"https:\/\/github.com\/jfrog\/cocoapods-art"},"https://developer.apple.com/app-store/review/guidelines/#privacy":{"title":"App Store Review Guidelines","titleInlineContent":[{"type":"text","text":"App Store Review Guidelines"}],"type":"link","identifier":"https:\/\/developer.apple.com\/app-store\/review\/guidelines\/#privacy","url":"https:\/\/developer.apple.com\/app-store\/review\/guidelines\/#privacy"},"https://developer.apple.com/forums/thread/123483":{"title":"here","titleInlineContent":[{"type":"text","text":"here"}],"type":"link","identifier":"https:\/\/developer.apple.com\/forums\/thread\/123483","url":"https:\/\/developer.apple.com\/forums\/thread\/123483"},"doc://ch.ti8m.idcheck.ui.library/documentation/IDCheckUILib":{"role":"collection","title":"IDCheckUILib","abstract":[{"type":"text","text":"IDCheckUILib - UI module for IDCheckLib"}],"identifier":"doc:\/\/ch.ti8m.idcheck.ui.library\/documentation\/IDCheckUILib","kind":"symbol","type":"topic","url":"\/documentation\/idcheckuilib"},"customise_colors":{"alt":"Customising colors","type":"image","identifier":"customise_colors","variants":[{"url":"\/images\/customise_colors.png","traits":["1x","light"]}]}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null},{"op":"replace","path":"\/references\/doc:~1~1ch.ti8m.idcheck.ui.library~1documentation~1IDCheckUILib~1IDCheckUIDelegate\/title","value":"IDCheckUIDelegate"},{"op":"replace","path":"\/references\/doc:~1~1ch.ti8m.idcheck.ui.library~1documentation~1IDCheckUILib~1IDCheckUIDelegate\/fragments","value":[{"kind":"identifier","text":"IDCheckUIDelegate"}]},{"op":"replace","path":"\/references\/doc:~1~1ch.ti8m.idcheck.ui.library~1documentation~1IDCheckUILib~1IDCheckUIDelegate~1presentViewController(_:)\/title","value":"presentViewController:"},{"op":"replace","path":"\/references\/doc:~1~1ch.ti8m.idcheck.ui.library~1documentation~1IDCheckUILib~1IDCheckUIDelegate~1presentViewController(_:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"presentViewController:"}]},{"op":"replace","path":"\/references\/doc:~1~1ch.ti8m.idcheck.ui.library~1documentation~1IDCheckUILib~1IDCheckUI\/title","value":"IDCheckUI"},{"op":"replace","path":"\/references\/doc:~1~1ch.ti8m.idcheck.ui.library~1documentation~1IDCheckUILib~1IDCheckUI\/fragments","value":[{"kind":"identifier","text":"IDCheckUI"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}